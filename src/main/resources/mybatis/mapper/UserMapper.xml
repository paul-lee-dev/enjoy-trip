<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.enjoyTrip.user.dao.UserMapper">

    <!-- 회원가입 -->
    <insert id="createUser" parameterType="createUserReq">
        insert into user(email, password, name, nickname,
                         phone_number)
        values (#{email}, #{password}, #{name}, #{nickname}
               , #{phoneNumber})
    </insert>

    <insert id="createSnsUser" parameterType="snsInfoDto">
        <choose>
            <when test="email != null">
                insert into user(email, profile_img)
                values (#{email}, #{profileImgUrl});

                insert into sns_info(user_id, email, sns_type)
                values((select user_id
                        from user
                        where email = #{email})
                      , #{email}, #{snsType});
            </when>
            <otherwise>
                insert into user(name, profile_img)
                values (#{name}, #{profileImgUrl});

                insert into sns_info(user_id, sns_type)
                values((select user_id
                from user
                where name = #{name})
                , #{snsType});
            </otherwise>
        </choose>
    </insert>

    <!-- 정보조회 -->
    <select id="findById" parameterType="int" resultType="getUserRes">
        select user_id, email, password, name, nickname, profile_img as profile_img_url,
               created_at, phone_number, status, role
        from user where user_id = #{userId} and status != 'deleted'
    </select>
    <select id="findByEmail" parameterType="String" resultType="getUserRes">
        select user_id, email, password, name, nickname, profile_img as profile_img_url,
               created_at, phone_number, status
        from user where email = #{email} and status != 'deleted'
    </select>
    <select id="findByName" parameterType="String" resultType="getUserRes">
        select user_id, email, password, name, nickname, profile_img as profile_img_url,
               created_at, phone_number, status
        from user where name = #{name} and status != 'deleted'
    </select>
    <select id = "findAll" resultType="getUserRes">
        select user_id, email, password, name, nickname, profile_img as profile_img_url,
                       created_at, phone_number, status
        from user
        where status != 'deleted'
    </select>

    <!-- 수정 -->
    <update id="modifyUser" parameterType="modifyUserReq">
        update user set email = #{email}, name = #{name}, nickname = #{nickname}, phone_number = #{phoneNumber},
                        profile_img = #{profileImgUrl}
        where user_id = #{userId}
    </update>

    <update id="modifyPassword" parameterType="modifyPwdReq">
        update user set password = #{password}
        where user_id = #{userId}
    </update>

    <!-- 삭제 -->
    <update id="deleteUser" parameterType="int">
        update user set status = 'deleted'
        where user_id = #{userId}
    </update>
</mapper>