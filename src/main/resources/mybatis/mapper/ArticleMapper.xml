<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.enjoyTrip.article.dao.ArticleMapper">

    <sql id="search">
        <if test="word != null and word != ''">
            <if test="key == 'subject'">
                subject like concat('%', #{word}, '%') and
            </if>
            <if test="key != 'subject'">
                ${key} = #{word} and
            </if>
        </if>
        true
    </sql>

    <!-- 게시판 생성 -->
    <insert id="createArticle" parameterType="CreateArticleReq">
        insert into article (user_id, subject, content)
        values (#{userId}, #{subject}, #{content})
    </insert>

    <!-- 게시글 조회  -->
    <select id="getArticle" parameterType="int" resultType="GetArticleRes">
        select article_id, user_id, subject, content, hit, created_at
        from article
        where article_id = #{articleId}
    </select>

    <!-- 게시판 조회  -->
    <select id="listArticle" parameterType="map" resultType="GetArticleRes">
        select article_id, user_id, subject, hit, created_at
        from article
        where
        <include refid="search"></include>
        order by article_id desc
        limit #{start}, #{listsize}
    </select>

    <!-- 게시글 수정 -->
    <update id="modifyArticle" parameterType="ModifyArticleReq">
        update article set subject = #{subject}, content = #{content}
                         where article_id = #{articleId}
    </update>

    <!-- 조회 수 업데이트 -->
    <update id="updateHit" parameterType="int">
        update article
        set hit = hit + 1
        where article_id = #{articleId}
    </update>

    <!-- 삭제 -->
    <delete id="deleteArticle" parameterType="int">
        delete from article
        where article_id = #{articleId}
    </delete>


    <!-- 댓글 생성 -->
    <insert id="createComment" parameterType="CreateCommentReq">
        <choose>
            <when test="parentCommentId != null">
                insert into comment (user_id, parent_comment_id,article_id, content)
                values (#{userId},  #{parentCommentId},#{articleId}, #{content})
            </when>
            <otherwise>
                insert into comment (user_id, article_id, content)
                values (#{userId},#{articleId}, #{content})
            </otherwise>
        </choose>
    </insert>

    <select id="listComment" parameterType="map" resultType="GetCommentRes">
        select comment_id, user_id, content, created_at
        from comment
        where article_id = #{articleId}
    </select>

    <!-- 수정 -->
    <update id="modifyComment" parameterType="ModifyCommentReq">
        update comment set  content = #{content}
        where comment_id = #{commentId}
    </update>

    <!-- 삭제 -->
    <delete id="deleteComment" parameterType="int">
        delete from comment
        where comment_id = #{commentId}
    </delete>

</mapper>